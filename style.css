/* Style par défaut */
/* on essaie de mettre les éléments généraux/par défaut/ réutilisables au début */
* {
  margin: 0;
  padding: 0;
  /* pour éviter de devoir deviner les marges etc on met tout à 0 */
  font-family: "Vollkorn", serif;
  list-style-type: none;
  /* enlève les styles de liste par défaut */
  text-decoration: none;
  /* pour les les balises <a></a> par exemple  */
  box-sizing: border-box;
  /* Indique au navigateur de prendre en compte toute bordure et tout remplissage dans les valeurs que vous spécifiez pour la largeur et la hauteur d’un élément.*/
  outline: none;
  
  /* les contours */
}

/* pour changer la barre de scroll */
::-webkit-scrollbar {
  width: 9px;
}
::-webkit-scrollbar-thumb {
  background-color: var(--couleurtr);
  border-radius: 0px;
}

html {
  font-size: 62.5%;
  /* https://developer.mozilla.org/fr/docs/Learn/CSS/Building_blocks/Values_and_units */
  /* https://connect.adfab.fr/dev/dev-front/unite-de-mesure-css-rem */
  /* on définit le font-size à 62.5%. Comme on a l'intention d'utiliser rem et qu'un rem = 16px et qu'on veut qu'un rem = 10px */
}

:root {
  /* root | les variables, déclare la var comme suit : --NomDeLaVar: valeur */
  --couleurpp: rgb(43, 131, 2);
  --couleursc: #eee;
  --couleurtr: rgb(8, 91, 168); 
  --cblanc: #fff;
  --cgris: #555;
  --lcgris: #777;
}

/* la méthode ultime pour CENTRER RETIENS BIEN OUHOUUUU */
.center {
  display: flex;
  justify-content: center;
  align-items: center;
}

.container {
  /* ainsi, pour utiliser la variable : var(--NomDeLaVariable ) */
  background-color: var(--couleursc);
  /* ce container contient tous les éléments de notre page, c'est pouquoi on a un margin de 3.5rem */
  margin: 3.5rem;
  /* les bordures en ombre */
  box-shadow: 0 1rem 3rem var(--cgris);
  /* afin de cacher tous ce qui dépasse, on met en hidden, (peut scroll avec `scroll`) */
  overflow: hidden;
  border-radius: 3.5rem;
  background-image: url;
}

/* fin des styles communs */

/* Navbar */
.navbar-icon {
  width: 5.5rem;
  height: 5.5rem;
  background-color: var(--cblanc);
  border-radius: 50%;
  cursor: pointer;
  flex-direction: column;
}

.open-navbar-icon {
  position: fixed;
  top: 6.5rem;
  left: 6.5rem;
  z-index: 200;
}

.navbar-icon .line {
  height: 0.2rem;
  width: 3.5rem;
  background-color: var(--lcgris);
}

.open-navbar-icon .line {
  margin: 0.3rem 0;
}

.navbar-wrapper {
  width: 100vw;
  height: 100vh;
  background-color: rgba(255, 255, 255, 0.7);
  position: fixed;
  left: 0;
  bottom: -100%;
  opacity: 0;
  z-index: 300;
  padding: 3.5rem 5.5rem 3.5rem 3.5rem;
  transition: bottom 0.5s, opacity 0.2s;
}

.change .navbar-wrapper {
  bottom: 0;
  opacity: 1;
  transition: bottom 0.5s, opacity 0.2s 0.25s;
}

.navbar {
  width: 100%;
  height: 100%;
  background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.3)),
    url(images/navbar-bg.jpg) center no-repeat;
  background-size: cover;
  position: relative;
  overflow-y: hidden;
}

.close-navbar-icon {
  position: absolute;
  top: 2.5rem;
  right: 3rem;
  z-index: 300;
}

.close-navbar-icon .line {
  position: absolute;
}

.line-1 {
  transform: rotate(40deg);
}

.line-2 {
  transform: rotate(-40deg);
}

.nav-list {
  height: 100%;
  display: flex;
}

.nav-link {
  font-size: 3rem;
  font-weight: 700;
  color: var(--cblanc);
  text-transform: uppercase;
  width: 100%;
  opacity: 0.8;
  position: relative;
  top: -100%;
  transition: all 0.3s;
}

.change .nav-link {
  top: 0;
}

.nav-link:hover {
  opacity: 1;
  color: var(--couleurpp);
}

.change .nav-link:nth-child(1) {
  transition: top 1s 0.4s, opacity 0.3s, color 0.3s;
}

.change .nav-link:nth-child(2) {
  transition: top 1s 0.6s, opacity 0.3s, color 0.3s;
}

.change .nav-link:nth-child(3) {
  transition: top 1s 0.8s, opacity 0.3s, color 0.3s;
}

.change .nav-link:nth-child(4) {
  transition: top 1s 1s, opacity 0.3s, color 0.3s;
}

.change .nav-link:nth-child(5) {
  transition: top 1s 1.2s, opacity 0.3s, color 0.3s;
}

.change .nav-link:nth-child(6) {
  transition: top 1s 1.4s, opacity 0.3s, color 0.3s;
}


/* fin de la Navbar */

/* Header */
.header {
  width: 100%;
  /* ici on utilise la fonction calc pour définir la hauteur, 1vh= 1% de la hauteur de la fenêtre*/
  /* 7rem car 2*3.5=7, ainsi nous avons ce un header qui fera ces dimensions */
  height: calc(100vh - 7rem);
  /* pour créer  un gradient de couleur, la flemme d'expliquer: utilise ce site : https://cssgradient.io/ puis utilise les arcanes du savoir*/
  background: 
  /* on centre, si l'image est trop petite, elle va se répéter, il s'agirait alors de pas vomir des yeux et mettre en no-repeat */
    url(images/1.jpg) center no-repeat;
  /* afin que l'image couvre bien le tout */
  background-size: cover;
  /* dans le flux normal du document puis décalé, par rapport à lui-même, 
  selon les valeurs fournies par top, right, bottom et left */
  /* on le fout en relative pour mettre le logo en absolut */
  position: relative;
  /* en général, jusqu'où l'objet sera loin de l'utilisateur */
  /* plus c'est bas, plus de perspective */
  /* pour que le ballon se carapate*/
  perspective: 100rem;
}

.header-text {
  text-align: center;
  /* mettre en majuscule */
  text-transform: uppercase;
  /* l'espacement entre les lignes */
  letter-spacing: 0.1rem;
  /* t'as compris */
  text-shadow: 0 0.3rem 0.5rem var(--cgris);
}

.heading {
  font-size: 8rem;
  color: var(--cblanc);
}

.header-paragraph {
  font-size: 3rem;
  /* taux de lipide pour la police */
  font-weight: 500;
  color: var(--couleursc);
  /* t'as compris */
  max-width: 70rem;
  /* pour centrer le texte: margin: auto */
  margin: auto;
}

/* notre logo laRoute */
.logo {
  /* voir header */
  position: absolute;
  /* comme la position est absolute: top et right sont définies en fonction de leur bord respectif 
  le logo sera ainsi dans le bord haut droit */
  /* décale de 4rem en fonction du bord supérieur etc */
  top: 4rem;
  right: 4rem;
}

/* tous les h1 de la classe logo */
.logo h1 {
  display: flex;
}
/* tous les span de h1 de la classe logo vont devenir :  */
.logo h1 span {
  /* t'as compris */
  font-size: 2rem;
  font-weight: 900;
  color: var(--couleurpp);
  text-transform: uppercase;
  background-color: var(--cblanc);
  /* la taille et marge des spans */
  width: 3.5rem;
  height: 3.5rem;
  margin: 0.5rem;
  /* on définit un radius de 50% pour avoir un rond pour chaque span*/
  border-radius: 50%;
}


  /* soit la propriété animation qui prendra comme paramètres : 
  -le nom de l'animation, 
  -la durée de l'animation
  -le délai avant execution
  -le nombre d'itération
    */

    /*les spans de h1 de la class logo ont chacun un index par nth-child, 
    comme logo possède 7 éléments span, 
    attribution automatique des numéros de 1 à 7 du premier élément jusqu'au 7ième*/
.logo h1 span:nth-child(1) {
  animation: saute-lettre 5s 0.1s infinite;
}

.logo h1 span:nth-child(2) {
  animation: saute-lettre 5s 0.2s infinite;
}

.logo h1 span:nth-child(3) {
  animation: saute-lettre 5s 0.3s infinite;
}

.logo h1 span:nth-child(4) {
  animation: saute-lettre 5s 0.4s infinite;
}

.logo h1 span:nth-child(5) {
  animation: saute-lettre 5s 0.5s infinite;
}

.logo h1 span:nth-child(6) {
  animation: saute-lettre 5s 0.6s infinite;
}

.logo h1 span:nth-child(7) {
  animation: saute-lettre 5s 0.7s infinite;
}

/* on utilise keyframes pour l'animation des lettres  */
/* saute-lettre est le nom de l'animation */
@keyframes saute-lettre {
  /* les % représente la progression de l'animation*/
  0% {
    /* état initial en y à 0 */
    transform: translateY(0%);
  }
  10% {
    transform: translateY(0);
  }
  15% {
    /* trasnlation en y de -100% en fonction de la div logo */
    /* nb: x et y ont leur point d'origine en haut à gauche */
    transform: translateY(-100%) ;
  }
  20% {
    transform: translateY(0);
  }
  90% {
    transform: translateX(1rem);
  }

  100% {
    transform: translateY(0rem);
  }
}

.header-image {
  width: 35%;
  animation: image-float 150s infinite;
}
/* MEME LOGIQUE QUE POUR LE LOGO JUSTE EN HAUT*/
/* NB: à aucun moment, l'image se rétrécit :DDDDDDDDDDDDDDDD */
@keyframes image-float {
  0% {
    transform: translateZ(40rem);
    /* opacité */
    opacity: 1;
  }
  40% {
    transform: translateZ(-500rem) translateX(150rem);
    opacity: 0.8;
  }
  70% {
    transform: translateZ(-1500rem) translateX(800rem);
    opacity: 0.6;
  }
  80% {
    transform: translateZ(-50rem) translateX(100rem);
    opacity: 0.8;
  }
  100% {
    transform: translateZ(40rem);
    opacity: 1;
  }
}
/* Fin du Header */

/* Circuits populaires*/
.circuitsPopulaires {
  /* top puis right puis bot puis left */
  padding: 5rem 0 10rem 0;
}

/* le titre de la section circuitsPopulairs */
.circuitsPopulaires-heading {
  font-size: 6rem;
  text-align: center;
  margin-bottom: 8rem;
  color: var(--couleurtr);
  text-shadow: 0 0.1rem 0.2rem var(--couleurtr);
}

/* nos cartes de circuits */
.cards-wrapper {
  display: flex;
/* répartition du type scace-evenly */
/* cela va les placer les uns à côté des autres  mais nous aurons pas l'espace entre eux(trop gros)*/
  justify-content: space-evenly;
}

.card {
  width: 35rem;
  /* once again, mettre en relative pour que les fils puissent être en absolute */
  position: relative;
  /* les cartes auront des mouvements 3d, alors, il faut mettre de la perspective */
  perspective: 150rem;
  
}

.card-image {
  /* l'image va hériter de la larguer de l'élément parent, ici, 35 rem*/
  width: 100%;
  /* top-left puis top-right etc */
  border-radius: 0.3rem 0.3rem 0 0;
}

.front-side {
  text-align: center;
  background-color: var(--cblanc);
  border-radius: 0.3rem;
  /* encore uen fois, front-side est l'attribut parent, il faut le mettre en relative afin 
  de mettre les attributs fils en absolute */
  position: relative;
  /* comme le front et le backside ont le même index-z, on force le front à "s'avancer" */
  z-index: 10;
  opacity: 0.9;
  /* pour une transition plus soft */
  /* transition permet d'appliqué des propriétés sur la base de consignes, ici des délais */
  transition: opacity 4s, transform 0.4s, box-shadow 0.4s;
}

/* > = child combinator : vise les éléments correspondant au second sélecteur */
/* > : sépare deux sélecteurs et cible seulement les éléments correspondant au second sélecteur qui 
sont des enfants directs des éléments ciblés par le premier sélecteur*/ 
/* initialement, cette sélection est valide cf. toggle()*/
.change > .front-side {
  transform: translateZ(-5rem) translateX(3rem);
  box-shadow: 0 2rem 4rem #777;
  opacity: 0.5;
  z-index: 0;
}

.nomCircuit {
  font-size: 2.5rem;
  font-weight: 700;
  text-transform: uppercase;
  position: absolute;
  top: 30%;
  right: 1.5rem;
  color: var(--cblanc);
  text-shadow: 0 0 1rem #000;
}

.card-list {
  /* la list s'étalera de 80% en largeur, -10 % de chaque côté */
  width: 80%;
  margin: auto;
  padding: 1rem 0 3rem 0;
}

/* chaque item de notre list */
.card-list-item {
  font-size: 1.6rem;
  font-weight: 500;
  color: var(--lcgris);
  margin: 2rem 0;
  /* épaiseur de la bordure, en solid, couleur principale */
  border-bottom: 0.1rem solid var(--couleurpp);
  padding-bottom: 1.5rem;
}

/* la face verso de nos cartes de la div back-side */
.back-side {
  color: var(--couleurpp);
  position: absolute;
  top: 0;
  background-color: var(--couleursc);
  width: 100%;
  height: 100%;
  border-radius: 0.3rem;
  box-shadow: 0 2rem 4rem #777;
  /* afin que les items se flexent en colonne et non en ligne */
  flex-direction: column;
  /* on déplace ainsi le backside sur le côté droit arrière du front */
  transform: translateZ(-5rem) translateX(3rem);
  opacity: 0.5;
  /* pour une transition plus soft */
  transition: opacity 4s, transform 0.4s, box-shadow 0.4s;
}

/* grâce à js, cette class .change sera appliqué au font-side et back-side et supprimé grâce à toggle() */
/* > : sépare deux sélecteurs et cible seulement les éléments correspondant au second sélecteur qui 
sont des enfants directs des éléments ciblés par le premier sélecteur*/
/* https://developer.mozilla.org/fr/docs/Web/CSS/Child_combinator */
.change > .back-side {
  transform: translateZ(0) translateX(0);
  box-shadow: 0 0.5rem 2rem #aaa;
  opacity: 0.9;
}

.prix {
  font-size: 3rem;
  font-weight: 300;
  color: var(--couleurtr);
  margin-bottom: 3rem;
}

.card-button {
  color: var(--couleurpp);
  background-color: var(--cblanc);
  border: none;
  font-size: 2.5rem;
  padding: 1rem 2rem;
  letter-spacing: 0.2rem;
  border-radius: 5rem;
  /* pour changer le type de curseur quand on passe dessus */
  cursor: pointer;
}

/* les boutons */
.navigation-button {
  position: absolute;
  top: 0.5rem;
  left: 0.5rem;
  padding: 0.5rem;
  background-color: rgba(255, 255, 255, 0.8);
  color: var(--lcgris);
  border-radius: 0.3rem;
  border: none;
  font-size: 1.5rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.2rem;
  cursor: pointer;
}
/* fin circuit */

/* slider */

.dadclass {
  
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  overflow: hidden;
  padding-bottom: 7rem;
  background-position: center center;
  background-size: cover;
  transition: 0.4s;

}

.filstitre {
  font-size: 6rem;
  text-align: center;
  margin-bottom: 4rem;
  color: var(--couleurtr);
  text-shadow: 0 0.1rem 0.2rem var(--couleurtr);
}

.dadclass::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  /* background-color: rgba(0, 0, 0, 0.7); */
  z-index: -1;
}

.slider-container {
  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);
  height: 80vh;
  width: 80vw;
  position: relative;
  overflow: hidden;
}

.slide {
  opacity: 0;
  height: 100vh;
  width: 100vw;
  background-position: center center;
  background-size: cover;
  position: absolute;
  top: -0vh;
  left: -15vw;
  transition: 0.4s ease;
  z-index: 1;
}

.slide.active {
  opacity: 1;
}

.arrow {
  position: relative;
  background-color: transparent;
  color: #fff;
  padding: 20px;
  font-size: 30px;
  border: 2px solid white;
  top: 50%;
  transform: translateY(-50%);
  cursor: pointer;
  z-index: 50;
}

.arrow:focus {
  outline: 0;
}

.left-arrow {
  left: calc(77vw + 1rem + 2px);
  background-image: url(images/right.png);
  background-size: cover;
}

.right-arrow {
  right: calc(46px);
  background-image: url(images/Fleche-gauche.png);
  background-size: cover;
  
}
/* fin du slider */


/* Stories */
.stories {
  padding: 10rem 0;
  position: relative;
}

.video-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0.4;
}

.bg-video {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.stories-wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.story-bg {
  background-color: rgba(238, 238, 238, 0.85);
  padding: 5rem;
  margin: 5rem;
  width: 70%;
  box-shadow: 0 2rem 5rem rgba(51, 51, 51, 0.4);
  transform: skewX(0deg);
  border-radius: 1rem;
}

.story {
  transform: skewX(0deg);
  display: flex;
}

.story-image {
  width: 20rem;
  height: 20rem;
  border-radius: 50%;
  object-fit: cover;
  margin-right: 5rem;
}

.story-text {
  letter-spacing: 0.1rem;
}

.story-heading {
  font-size: 2.5rem;
  text-transform: uppercase;
  color: var(--cgris);
  margin-bottom: 1rem;
}

.story-paragraph {
  font-size: 1.8rem;
  color: var(--lcgris);
}

.story-paragraph::first-letter {
  margin-left: 1rem;
}
/* fin des Stories */

/* Contact */
.contact {
  padding: 15rem 0 20rem 0;
  text-align: center;
  background: url(images/contact-us-bg.png) center no-repeat;
  background-size: cover;
  animation: contact-bg 35s infinite;
}

.contact-heading {
  font-size: 7rem;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.5rem;
  color: var(--cblanc);
  text-shadow: 0 1rem 2rem #000;
  margin-bottom: 8rem;
}

.contact-form {
  width: 70rem;
  height: 50rem;
  background-color: rgba(255, 255, 255, 0.95);
  margin: auto;
  flex-direction: column;
  border-radius: 0.5rem;
  box-shadow: 0 1rem 3rem #000;
  padding: 5rem;
}

.input-group {
  width: 100%;
  display: flex;
  flex-direction: column;
  margin: 1rem 0;
  position: relative;
}

.input-groups {
  width: 100%;
  display: flex;
  justify-content: space-between;
}

.input-groups .input-group {
  width: 48.5%;
}

.input-group input,
.input-group textarea {
  padding: 3rem 1rem 1rem 1rem;
  background-color: var(--couleursc);
  border: 0.1rem solid var(--couleursc);
  font-size: 1.4rem;
  color: var(--lcgris);
  letter-spacing: 0.1rem;
  border-radius: 0.5rem;
  transition: border 0.3s;
}

.input-group input:focus,
.input-group textarea:focus {
  border: 0.1rem solid #ccc;
}

.input-group label {
  font-size: 1.2rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.1rem;
  color: var(--cgris);
  position: absolute;
  top: 1rem;
  left: 1rem;
}

.form-btn {
  width: 100%;
  padding: 1rem;
  font-size: 1.6rem;
  letter-spacing: 0.1rem;
  margin-top: 1rem;
  background-color: var(--lcgris);
  color: var(--cblanc);
  border-radius: 0.5rem;
  border: none;
  cursor: pointer;
  transition: background-color 0.4s;
}

/* au passage de la souris, change de couleur */
.form-btn:hover {
  background-color: var(--couleurpp);
}

/* css'ing du textearea */
.input-group textarea {
  max-height: 15rem;
  max-width: 100%;
}

@keyframes contact-bg {
  0% {
    background-color: #3d3d3d;
  }
  25% {
    background-color: #ced8e4;
  }
  50% {
    background-color: #1e81f3;
  }
  75% {
    background-color: #ff7842;
  }
  100% {
    background-color: #3d3d3d;
  }
}
/* Fin de Contact */

/* Footer */
.footer {
  background-color: var(--cgris);
  padding: 4rem 0 2rem 0;
}

.footer-list {
  display: flex;
  justify-content: center;
}

.footer-link {
  font-size: 2rem;
  color: var(--cblanc);
  margin: 0 2rem;
  background-color: var(--cgris);
  padding: 0.3rem 3rem;
  letter-spacing: 0.3rem;
  transition: all 0.2s;
}

.footer-link:hover {
  transform: rotate(-10deg);
  box-shadow: 0 2rem 3rem #000;
}

.footer-paragraph {
  text-align: center;
  font-size: 1.5rem;
  color: var(--couleursc);
  letter-spacing: 0.2rem;
  margin-top: 5rem;
}
/* Fin de Footer */

@media (max-width: 1200px) {
  .cards-wrapper {
    flex-direction: column;
    align-items: center;
  }

  .card {
    margin: 3rem 0;
  }

  .story-bg {
    width: 85%;
  }
}


/* le responsive */
@media (max-width: 1000px) {
  .nav-list {
    flex-direction:row;
  }

  .nav-link {
    flex-grow: 1;
  }

  .header-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 10;
  }

  .heading {
    font-size: 6rem;
  }

  .header-paragraph {
    font-size: 2.5rem;
  }

  .circuitsPopulaires-heading {
    font-size: 6rem;
  }

  .story-bg {
    transform: skewX(0);
  }

  .story {
    transform: skewX(0);
    flex-direction: column;
    align-items: center;
  }

  .story-image {
    margin-bottom: 3rem;
  }

  .footer-link {
    padding: 0.3rem 2rem;
    margin: 0 1rem;
  }
}

@media (max-width: 800px) {
  .header-paragraph {
    display: none;
  }

  .circuitsPopulaires-heading {
    font-size: 5rem;
  }

  .contact-form {
    width: 90%;
  }

  .footer-list {
    flex-direction: column;
    align-items: center;
  }

  .footer-link {
    margin: 1rem 0;
  }
}

@media (max-width: 650px) {
  .container {
    margin: 0;
  }

  .open-navbar-icon {
    top: 2.5rem;
    left: 2.5rem;
  }

  .navbar-wrapper {
    padding: 0;
  }

  .close-navbar-icon {
    right: 4rem;
  }

  .header {
    height: 100vh;
  }

  .contact-heading {
    font-size: 6rem;
  }

  .contact-form {
    padding: 2rem;
    height: 40rem;
  }
}

@media (max-width: 500px) {
  html {
    font-size: 45%;
  }
}

/* fin du responsive */